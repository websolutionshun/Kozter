---
alwaysApply: true
---
- A jelenlegi rendszer egy Yii Advanced keretrendszer.
- Ne hozz létre migrációs fájlt, ami csak logol, olyat soha ne hozz létre, csak akkor ha adatbázishoz kapcsolódó művelet a cél.
# Migráció:
- Migrációs fájl létrehozása automatikus yes válasszal
php yii migrate/create add_field_to_table --interactive=0
- Migrációs fájl futtatása automatikus yes válasszal
php yii migrate/up --interactive=0
- Fontos, azoknál a parancsoknál, amikben php yii migrate van mindig legyen ott az --interactive=0
soha ne használd a php yii serve --port=8080 megoldást, mert wamperservert használunk virtual host-tal
# Dokumentáció
- csak a komplexebb új modulfejlesztésekről készíts dokumentációt ide: /#dev_docs. használj időbélyeget a fájl leírás elejére, mindig az aktuális mai nappal! pl.: yyyy_mm_dd_dashboard_readme.md használd előtte a "echo %date%" parancsot a pontos dátum meghatározásához! A dokumentációnál a fejlesztő neve mindig "Web Solutions Hungary Kft." legyen!
# Környezeti változók
- soha ne módosíts a ".env" fájlban. ha módosítani kell, akkor kérj meg rá, vagy egészítsd ki a .env.sample fájlt
- a virtualhost jelen projekt esetén (frontend, majd admin):
http://kozter.test #frontend
http://kozter-admin.test #admin
# Kód tisztaság
- "tisztítsd a kódot!" prompt esetén vizsgáld felül az általad írt kódot a következő kritériumok alapján: a fölösleges logolási részeket töröld, akár php log, akár javascript alapú logról van szó. Töröld a teszt részeket, amikre már nem lesz szükség. Ezen kívül pedig ellenőrizd, hogy van-e olyan rész túl lett bonyolítva ezáltal egyszerűsíthető, vagy olyan kódrész ami használhatatlan, esetlegesen duplikált.
# tartalmi kiegészítések
- az összes leírás amit készítesz, mindig tegeződve íródjon és magyar nyelven
- a "/backend/views" mappán belüli view fájloknál mindig figyelj arra, hogy az egyes badge részek ne legyenek nagyon kontrasztosak, olvashatatlanok. használd azt a módszert, amit már a többi oldalon is alkalmaztál, hogy halványabb színekkel jelenjenek meg.